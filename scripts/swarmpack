#!/bin/bash
source ./lib/yaml
source ./lib/mo
source ./secrets

# stack_name=

# while [ "$1" != "" ]; do
#     case $1 in
#         -s | --stack )  shift
#                         stack_name=$1
#                         ;;
#     esac
#     shift
# done

current_path=$(pwd)

cd ../pack

external_secret() {
  echo 'secret ---- start'
  echo $0
  echo $1
  echo $2
  echo $3
  # echo $cat
  echo -n "*** $(cat) ***"
  echo 'secret ---end'
}

# create_variables packfile.yml
# echo "Swarmpack: Packaging $pack_name $pack_version"

# create_variables values.yml

cat docker-compose.tpl.yml | mo > docker-compose-tmp.yml

cat docker-compose-tmp.yml
# $current_path/lib/normalizeYml -f docker-compose-tmp.yml > docker-compose.yml

# rm docker-compose-tmp.yml

# create_variables docker-compose.yml

# src_array_temp=()

# for i in `compgen -A variable | grep services_`
# do
#   service=$(echo $i | cut -d'_' -f 2)
#   src_array_temp=("${src_array_temp[@]}" "$service" )
# done

# svc_array=($(printf "%s\n" "${src_array_temp[@]}" | sort -u))

# for i in "${svc_array[@]}"
# do
#   docker service rm "${stack_name}_${i}" >&-
# done

# echo "Swarmpack: Deploying $pack_name $pack_version"

# create_secrets

# docker stack deploy --compose-file docker-compose.yml $stack_name

# rm docker-compose.yml


